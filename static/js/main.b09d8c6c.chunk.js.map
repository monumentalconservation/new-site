{"version":3,"sources":["images/mmt-main-logo.png","images/me-photo-min.jpg","images/ness.jpg","images/loch-doon.jpg","images/lochranza-rainbow.jpg","components/NavItem.js","components/Nav.js","components/Border.js","components/HomeIntro.js","components/HomeMainText.js","components/Home.js","components/About.js","components/Sites.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavItem","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","className","logo","href","text","react_default","a","createElement","concat","NavLink","exact","to","src","mmtLogo","Component","Nav","menu","map","item","components_NavItem","Border","alignment","HomeIntro","takingPhotograph","HomeMainText","lochDoon","ness","Home","components_HomeIntro","components_Border","components_HomeMainText","alt","lochranza","About","Sites","GDPR","App","BrowserRouter","components_Nav","Route","path","component","components","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b09d8c6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mmt-main-logo.6f880e61.png\";","module.exports = __webpack_public_path__ + \"static/media/me-photo-min.1dcd36e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ness.2adde48e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loch-doon.acd8e116.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lochranza-rainbow.72701de7.jpg\";","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport mmtLogo from '../images/mmt-main-logo.png'\n\n\nclass NavItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {className, logo, href, text} = this.props\n    return (\n      <li className={`mh2-ns f6 f4-l tc ${className}`}>\n        {/* NavLink gives use exact and accurate styles for page we are on */}\n        <NavLink exact to={href} className=\"link mh2-ns f6 f3-l tc\">\n          {/* TODO - Make mobile version of logo for better mobile nav */}\n          {\n            logo ? \n              <img src={`${mmtLogo}`} className=\"dv center logo\"/> : \n              text\n          }\n        </NavLink>\n      </li>\n    );\n  }\n}\n\nexport default NavItem;","import React, { Component } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport NavItem from './NavItem'\n\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div className=\"Nav\">\n        <ul className=\"list flex flex-wrap flex-nowrap-ns justify-between items-center mv4-l pa0\">\n          {menu.map(item => (\n            <NavItem {...item} />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n\n\nconst menu = [\n  {\n    text: 'Home',\n    logo: true,\n    className: 'order-3-ns w-100 w-30-ns mb3 mb0-ns',\n    href: '/'\n  },\n  {\n    text: 'About',\n    className: 'order-1-ns w-20',\n    href: '/about'\n  },\n  {\n    text: 'Sites',\n    className: 'order-2-ns w-20',\n    href: '/sites'\n  },\n  {\n    text: 'Blog',\n    className: 'order-4-ns w-20',\n    href: '/'\n  },\n  {\n    text: 'Your Data',\n    className: 'order-5-ns w-20',\n    href: 'gdpr'\n  }\n];","import React, { Component } from 'react';\n\nclass Border extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  render() {\n    const {alignment} = this.props\n    return (\n      <section className={`border-${alignment}`}></section>\n    );\n  }\n}\n\nexport default Border;","import React, { Component } from 'react';\nimport takingPhotograph from '../images/me-photo-min.jpg'\n\nclass HomeIntro extends Component {  \n  render() {\n    return (\n      <section className=\"leader mh5-ns\">\n        <h2 className=\"f3 f2-l normal lh-title-ns w-70-ns mh4 mb4 mv5-l \">\n            Monument Monitor is a collaborative research project between Historic Environment Scotland and University College London which aims to assess how we can visitors photographs of our properties to inform our site conservation and monitoring efforts.\n        </h2>\n        <div className=\"photo w-100 overflow-auto pb5-ns\">\n          <img className=\"w-60-ns fr-ns grayscale\" src={takingPhotograph}/>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default HomeIntro;","import React, { Component } from 'react';\nimport ness from '../images/ness.jpg'\nimport lochDoon from '../images/loch-doon.jpg'\n\n\nclass HomeMainText extends Component {\n  constructor(props) {\n    super(props)\n  }\n  \n  render() {\n    const {alignment} = this.props\n    return (\n      <section className=\"main-text mb8\">\n        <img src={lochDoon} className=\"grid-item-2 grayscale w-100 h-auto\" />\n        <div className=\"f5 f4-m f3-ns grid-item-1 pa4 lh-copy inverted\">\n          Similar to other heritage institutions of its size, Historic Environment Scotland has over 300 properties in it's care. These range from huge castles in the middle of cities to tumbledown brochs on remote islands. The team of conservation architects do a fantastic job managing their conservation, but they cannot be everywhere at once. It is difficult to monitor long term trends at more remote and less visited locations. \n        </div>\n        <div className=\"f5 f4-m f3-ns grid-item-3 pa4 lh-copy inverted\">\n          Historic properties however, are popular tourist attractions. In a recent survey by the Department for Digital, Culture Media and Sport, 73% of respondents had visited a heritage site in the past year; a figure which has been rising almost year on year. Visitors carry increasingly more sophisticated mobile phones with which many record their visits and share online. Why not use these photographs to monitor heritage sites remotely?\n        </div>\n        <img src={ness} className=\"grid-item-4 grayscale w-100 h-auto\" />\n        <div className=\"f5 f4-m f3-ns grid-item-5 pa4 lh-copy inverted\">\n          Over the next two years this project will run at 20 different sites across Scotland. Signs will ask visitors to take photographs of specific things at each site and submit them via email, whatsapp, twitter or instagram using the hashtag #monumentmonitor. We will then use the photographs to monitor long term issues effecting each site to try and establish to what extent visitors photographs can be used for this purpose. \n        </div>\n      </section>\n\n    );\n  }\n}\n\nexport default HomeMainText;","import React, { Component } from 'react';\nimport Border from './Border'\nimport HomeIntro from './HomeIntro'\nimport HomeMainText from './HomeMainText'\n\n// images (some unused)\nimport lochranza from '../images/lochranza-rainbow.jpg'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n\n        <HomeIntro />\n        \n        <Border alignment=\"left\" />\n        \n        <HomeMainText />\n\n        <Border alignment=\"right\" />\n\n        <h1 className=\"f3 f2-m f1-l normal tc ma5 \">\n          To what extent can we 'crowdsource conservation'?\n        </h1>\n\n        <section className=\"image-line grayscale\">\n          <img alt=\"Rainbow over Lochranza castle\" src={lochranza}/>\n        </section>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div className=\"about\">\n        Right...\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Sites extends Component {\n  render() {\n    return (\n      <div>\n        WHY IS THIS NOT WORKING?!\n      </div>\n    );\n  }\n}\n\nexport default Sites;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Nav from './Nav'\nimport Home from './Home'\nimport About from './About'\nimport Sites from './Sites'\n\nconst GDPR = () => <h1>Sites HIYA</h1>\n\nclass App extends Component {\n  render() {\n    return (\n      // router wraps whole page\n      <Router>\n        <div className=\"App\">\n          {/* intro title */}\n\n          <Nav />\n\n\n          {/* routed pages */}\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/foo\" components={Sites} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/gdpr\" component={GDPR} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'tachyons'\nimport './css/main.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}